#分库分表
spring.shardingsphere.dataSource.names = ds-0,ds-1,ds-2,ds-3
spring.shardingsphere.dataSource.ds-0.connectionTimeout = 30000
spring.shardingsphere.dataSource.ds-0.driverClassName = com.mysql.jdbc.Driver
spring.shardingsphere.dataSource.ds-0.idleTimeout = 600000
spring.shardingsphere.dataSource.ds-0.jdbcUrl = jdbc:mysql://192.168.10.111:3307/we_payment_0?autoReconnect=true&useSSL=false
spring.shardingsphere.dataSource.ds-0.username = weuat
spring.shardingsphere.dataSource.ds-0.password = Sds!1f8S1MF&
spring.shardingsphere.dataSource.ds-0.maxLifetime = 60000
spring.shardingsphere.dataSource.ds-0.corePoolSize = 2
spring.shardingsphere.dataSource.ds-0.maximumPoolSize = 10
spring.shardingsphere.dataSource.ds-0.transactionIsolation = TRANSACTION_READ_COMMITTED
spring.shardingsphere.dataSource.ds-0.type = com.zaxxer.hikari.HikariDataSource

spring.shardingsphere.dataSource.ds-1.connectionTimeout = 30000
spring.shardingsphere.dataSource.ds-1.driverClassName = com.mysql.jdbc.Driver
spring.shardingsphere.dataSource.ds-1.idleTimeout = 600000
spring.shardingsphere.dataSource.ds-1.jdbcUrl = jdbc:mysql://192.168.10.111:3307/we_payment_1?autoReconnect=true&useSSL=false
spring.shardingsphere.dataSource.ds-1.username = weuat
spring.shardingsphere.dataSource.ds-1.password = Sds!1f8S1MF&
spring.shardingsphere.dataSource.ds-1.maxLifetime = 60000
spring.shardingsphere.dataSource.ds-1.corePoolSize = 2
spring.shardingsphere.dataSource.ds-1.maximumPoolSize = 10
spring.shardingsphere.dataSource.ds-1.transactionIsolation = TRANSACTION_READ_COMMITTED
spring.shardingsphere.dataSource.ds-1.type = com.zaxxer.hikari.HikariDataSource

spring.shardingsphere.dataSource.ds-2.connectionTimeout = 30000
spring.shardingsphere.dataSource.ds-2.driverClassName = com.mysql.jdbc.Driver
spring.shardingsphere.dataSource.ds-2.idleTimeout = 600000
spring.shardingsphere.dataSource.ds-2.jdbcUrl = jdbc:mysql://192.168.10.111:3308/we_payment_0?autoReconnect=true&useSSL=false
spring.shardingsphere.dataSource.ds-2.username = weuat
spring.shardingsphere.dataSource.ds-2.password = Sds!1f8S1MF&
spring.shardingsphere.dataSource.ds-2.maxLifetime = 60000
spring.shardingsphere.dataSource.ds-2.corePoolSize = 2
spring.shardingsphere.dataSource.ds-2.maximumPoolSize = 10
spring.shardingsphere.dataSource.ds-2.transactionIsolation = TRANSACTION_READ_COMMITTED
spring.shardingsphere.dataSource.ds-2.type = com.zaxxer.hikari.HikariDataSource

spring.shardingsphere.dataSource.ds-3.connectionTimeout = 30000
spring.shardingsphere.dataSource.ds-3.driverClassName = com.mysql.jdbc.Driver
spring.shardingsphere.dataSource.ds-3.idleTimeout = 600000
spring.shardingsphere.dataSource.ds-3.jdbcUrl = jdbc:mysql://192.168.10.111:3308/we_payment_1?autoReconnect=true&useSSL=false
spring.shardingsphere.dataSource.ds-3.username = weuat
spring.shardingsphere.dataSource.ds-3.password = Sds!1f8S1MF&
spring.shardingsphere.dataSource.ds-3.maxLifetime = 60000
spring.shardingsphere.dataSource.ds-3.corePoolSize = 2
spring.shardingsphere.dataSource.ds-3.maximumPoolSize = 10
spring.shardingsphere.dataSource.ds-3.transactionIsolation = TRANSACTION_READ_COMMITTED
spring.shardingsphere.dataSource.ds-3.type = com.zaxxer.hikari.HikariDataSource

spring.shardingsphere.sharding.default-data-source-name = ds-0
spring.shardingsphere.sharding.tables.payment_order.actual-data-nodes = ds-${0..3}.payment_order_${0..3}
spring.shardingsphere.sharding.tables.payment_order.databaseStrategy.standard.preciseAlgorithmClassName = com.cpt.payment.common.dal.config.DatasourceHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.payment_order.databaseStrategy.standard.shardingColumn = tenant_code
spring.shardingsphere.sharding.tables.payment_order.tableStrategy.standard.preciseAlgorithmClassName = com.cpt.payment.common.dal.config.TableHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.payment_order.tableStrategy.standard.shardingColumn = tenant_code
spring.shardingsphere.sharding.tables.payment_withdraw.actual-data-nodes = ds-${0..3}.payment_withdraw_${0..3}
spring.shardingsphere.sharding.tables.payment_withdraw.databaseStrategy.standard.preciseAlgorithmClassName = com.cpt.payment.common.dal.config.DatasourceHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.payment_withdraw.databaseStrategy.standard.shardingColumn = tenant_code
spring.shardingsphere.sharding.tables.payment_withdraw.tableStrategy.standard.preciseAlgorithmClassName = com.cpt.payment.common.dal.config.TableHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.payment_withdraw.tableStrategy.standard.shardingColumn = tenant_code
spring.shardingsphere.sharding.tables.payment_bank_card.actual-data-nodes = ds-${0..3}.payment_bank_card_${0..3}
spring.shardingsphere.sharding.tables.payment_bank_card.databaseStrategy.standard.preciseAlgorithmClassName = com.cpt.payment.common.dal.config.DatasourceHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.payment_bank_card.databaseStrategy.standard.shardingColumn = tenant_code
spring.shardingsphere.sharding.tables.payment_bank_card.tableStrategy.standard.preciseAlgorithmClassName = com.cpt.payment.common.dal.config.TableHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.payment_bank_card.tableStrategy.standard.shardingColumn = tenant_code
spring.shardingsphere.sharding.tables.payment_payway.actual-data-nodes = ds-0.payment_payway
spring.shardingsphere.sharding.tables.payment_receiving_account.actual-data-nodes = ds-0.payment_receiving_account
spring.shardingsphere.sharding.tables.payment_receiving_type.actual-data-nodes = ds-0.payment_receiving_type
spring.shardingsphere.sharding.tables.payment_third_account.actual-data-nodes = ds-0.payment_third_account
spring.shardingsphere.sharding.tables.payment_third_payway.actual-data-nodes = ds-0.payment_third_payway
spring.shardingsphere.sharding.tables.support_bank.actual-data-nodes = ds-0.support_bank
spring.shardingsphere.props.sql.show = false
#kafka集群
spring.kafka.bootstrap-servers = kafka01.weuatapp.net:19092,kafka02.weuatapp.net:19092,kafka03.weuatapp.net:19092
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.enable-auto-commit = true
spring.kafka.consumer.group-id = cpt-payment
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-records = 10
spring.kafka.consumer.auto-commit-interval = 3000
spring.kafka.listener.type = BATCH
spring.kafka.listener.concurrency = 16
spring.kafka.listener.missing-topics-fatal = false
spring.kafka.producer.acks = all
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries = 3
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.compressionType = gzip
spring.kafka.producer.batchSize = 16384
spring.kafka.producer.properties.max.request.size = 10485760
# redis
spring.redis.cluster.nodes[0] = redis-cluster-01.weuatapp.net:6379
spring.redis.cluster.nodes[1] = redis-cluster-02.weuatapp.net:6379
spring.redis.cluster.nodes[2] = redis-cluster-03.weuatapp.net:6379
spring.redis.cluster.nodes[3] = redis-cluster-04.weuatapp.net:6379
spring.redis.cluster.nodes[4] = redis-cluster-05.weuatapp.net:6379
spring.redis.cluster.nodes[5] = redis-cluster-06.weuatapp.net:6379
spring.redis.cluster.max-redirects = 5
#spring.redis.password = 123456
spring.redis.timeout = 10000ms
spring.redis.lettuce.pool.max-active = 50
spring.redis.lettuce.pool.max-idle = 10
spring.redis.lettuce.pool.min-idle = 3

management.endpoints.jmx.exposure.include = info, health, prometheus, eureka
management.endpoints.web.exposure.include = info, health, prometheus, eureka
management.health.defaults.enabled = false
hystrix.threadpool.default.coreSize = 3
hystrix.threadpool.default.maximumSize = 6
hystrix.threadpool.default.maxQueueSize = 20
hystrix.threadpool.default.queueSizeRejectionThreshold = 20
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize = true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 3000
hystrix.command.default.circuitBreaker.errorThresholdPercentage = 50
hystrix.command.default.circuitBreaker.requestVolumeThreshold = 5
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds = 3000

feign.hystrix.enabled = true
feign.okhttp.enabled = true
ribbon.IsSecure = false
ribbon.ReadTimeout = 5000
ribbon.ConnectTimeout = 5000
ribbon.eager-load.enabled = true

#Zk监听配置变更
cpt.job.zookeeper = kafka01.weuatapp.net:12181,kafka02.weuatapp.net:12181,kafka03.weuatapp.net:12181

eureka.instance.prefer-ip-address = true
# 续约更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds = 3
# 续约到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds = 0
eureka.client.serviceUrl.defaultZone = http://eureka.weuatapp.net:8080/eureka/
eureka.client.registry-fetch-interval-seconds = 10
eureka.instance.ip-address = ${dockerip}
eureka.instance.instance-id = ${dockerip}:10006

logging.default.level = INFO
logging.level.com.cpt = INFO
opentracing.jaeger.log-spans = false

# 线程池
thread.pool.corePoolSize = 2
thread.pool.maxPoolSize = 20
thread.pool.keepAliveSeconds = 60
thread.pool.queueCapacity = 1000

#限定订单推送的最大数量
wait.push.maxSize = 50
#限定查询过期订单的最大数量
expired.orders.maxSize = 100
#本地缓存基础配置时间, 单位:小时
local.cache.duration = 24

#xxl job
xxl.job.accessToken = 
xxl.job.admin.addresses = http://xxl-job.weuatapp.net:11000/xxl-job-admin/
xxl.job.executor.appname = cpt-payment
xxl.job.executor.ip = 
xxl.job.executor.port = 8899
xxl.job.executor.logpath = /data/applogs/xxl-job/jobhandler
xxl.job.executor.logretentiondays = 30
