# kafka
spring.kafka.bootstrap-servers = kafka01.weuatapp.net:19092,kafka02.weuatapp.net:19092,kafka03.weuatapp.net:19092
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.enable-auto-commit = true
spring.kafka.consumer.group-id = cpt-push
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-records = 500
spring.kafka.consumer.auto-commit-interval = 1000
spring.kafka.listener.type = BATCH
spring.kafka.listener.concurrency = 8
spring.kafka.producer.acks = all
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries = 3
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.compressionType = gzip
spring.kafka.producer.batchSize = 16384
spring.kafka.producer.properties.max.request.size = 10485760

# redis
spring.redis.cluster.nodes[0] = redis-cluster-01.weuatapp.net:6379
spring.redis.cluster.nodes[1] = redis-cluster-02.weuatapp.net:6379
spring.redis.cluster.nodes[2] = redis-cluster-03.weuatapp.net:6379
spring.redis.cluster.nodes[3] = redis-cluster-04.weuatapp.net:6379
spring.redis.cluster.nodes[4] = redis-cluster-05.weuatapp.net:6379
spring.redis.cluster.nodes[5] = redis-cluster-06.weuatapp.net:6379
spring.redis.cluster.max-redirects = 5
#spring.redis.password = 123456
spring.redis.timeout = 1000ms
spring.redis.lettuce.pool.max-active = 100
spring.redis.lettuce.pool.max-idle = 80
spring.redis.lettuce.pool.min-idle = 10

# 监控
management.endpoints.jmx.exposure.include = info, health, prometheus, eureka
management.endpoints.web.exposure.include = info, health, prometheus, eureka
management.health.defaults.enabled = false

# hystrix
hystrix.threadpool.default.coreSize = 3
hystrix.threadpool.default.maximumSize = 6
hystrix.threadpool.default.maxQueueSize = 20
hystrix.threadpool.default.queueSizeRejectionThreshold = 20
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize = true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 3000
hystrix.command.default.circuitBreaker.errorThresholdPercentage = 50
hystrix.command.default.circuitBreaker.requestVolumeThreshold = 5
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds = 3000

# feign
feign.hystrix.enabled = true
feign.okhttp.enabled = true
ribbon.IsSecure = false
ribbon.ReadTimeout = 2000
ribbon.ConnectTimeout = 2000
ribbon.eager-load.enabled = true

opentracing.jaeger.log-spans = false

cpt.ws.host = 0.0.0.0
cpt.ws.port = 11008
cpt.ws.optionConnectTimeoutMillis = 5000
cpt.ws.optionSoBacklog = 4096
cpt.ws.childOptionSoRcvbuf = 32768
cpt.ws.childOptionSoSndbuf = 32768
cpt.ws.readerIdleTimeSeconds = 60

# 在线人数上报间隔周期，单位秒
online.publish.interval = 2
# 在线人数redis缓存过期时间, 单位秒
online.statistics.expire = 5

# eureka
eureka.client.serviceUrl.defaultZone = http://eureka.weuatapp.net:8080/eureka/
eureka.client.registry-fetch-interval-seconds = 10
eureka.instance.prefer-ip-address = true
# 续约更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds = 3
# 续约到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds = 0
eureka.instance.ip-address = ${dockerip}
eureka.instance.instance-id = ${dockerip}:10008
