#数据库 分库分片
spring.shardingsphere.dataSource.names = ds-0,ds-1
spring.shardingsphere.dataSource.ds-0.connectionTimeout = 30000
spring.shardingsphere.dataSource.ds-0.driverClassName = com.mysql.jdbc.Driver
spring.shardingsphere.dataSource.ds-0.idleTimeout = 600000
spring.shardingsphere.dataSource.ds-0.jdbcUrl = jdbc:mysql://192.168.10.111:3307/we_order_0?autoReconnect=true&useSSL=false&allowMultiQueries=true
spring.shardingsphere.dataSource.ds-0.username = weuat
spring.shardingsphere.dataSource.ds-0.password = Sds!1f8S1MF&
spring.shardingsphere.dataSource.ds-0.maxLifetime = 1800000
spring.shardingsphere.dataSource.ds-0.corePoolSize = 20
spring.shardingsphere.dataSource.ds-0.maximumPoolSize = 50
spring.shardingsphere.dataSource.ds-0.transactionIsolation = TRANSACTION_READ_COMMITTED
spring.shardingsphere.dataSource.ds-0.type = com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.dataSource.ds-1.connectionTimeout = 30000
spring.shardingsphere.dataSource.ds-1.driverClassName = com.mysql.jdbc.Driver
spring.shardingsphere.dataSource.ds-1.idleTimeout = 600000
spring.shardingsphere.dataSource.ds-1.jdbcUrl = jdbc:mysql://192.168.10.111:3307/we_order_1?autoReconnect=true&useSSL=false&allowMultiQueries=true
spring.shardingsphere.dataSource.ds-1.username = weuat
spring.shardingsphere.dataSource.ds-1.password = Sds!1f8S1MF&
spring.shardingsphere.dataSource.ds-1.maxLifetime = 1800000
spring.shardingsphere.dataSource.ds-1.corePoolSize = 20
spring.shardingsphere.dataSource.ds-1.maximumPoolSize = 50
spring.shardingsphere.dataSource.ds-1.transactionIsolation = TRANSACTION_READ_COMMITTED
spring.shardingsphere.dataSource.ds-1.type = com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.sharding.default-data-source-name = ds-0
spring.shardingsphere.sharding.tables.bets.actual-data-nodes = ds-${0..1}.bets_${0..3}
spring.shardingsphere.sharding.tables.bets.databaseStrategy.complex.algorithmClassName = com.cpt.settlement.common.dal.config.DatasourceHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.bets.databaseStrategy.complex.shardingColumns = tenant_code,member_id
spring.shardingsphere.sharding.tables.bets.tableStrategy.complex.algorithmClassName = com.cpt.settlement.common.dal.config.TableHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.bets.tableStrategy.complex.shardingColumns = tenant_code,member_id
spring.shardingsphere.sharding.tables.bets_member.actual-data-nodes = ds-${0..1}.bets_member
spring.shardingsphere.sharding.tables.bets_member.databaseStrategy.complex.algorithmClassName = com.cpt.settlement.common.dal.config.DatasourceHashPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.bets_member.databaseStrategy.complex.shardingColumns = tenant_code,member_id
spring.shardingsphere.props.sql.show = true
#kafka
spring.kafka.bootstrap-servers = kafka01.weuatapp.net:19092,kafka02.weuatapp.net:19092,kafka03.weuatapp.net:19092
spring.kafka.listener.ack-mode = MANUAL
spring.kafka.max.poll.interval.ms = 3000
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.enable-auto-commit = false
spring.kafka.consumer.group-id = cpt_settlement
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-records = 10
spring.kafka.consumer.auto-commit-interval = 1000
spring.kafka.listener.type = BATCH
spring.kafka.listener.concurrency = 1
spring.kafka.producer.acks = all
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries = 3
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.compressionType = gzip
spring.kafka.producer.batchSize = 16384
spring.kafka.producer.properties.max.request.size = 10485760
#redis 配置
spring.redis.cluster.nodes[0] = redis-cluster-01.weuatapp.net:6379
spring.redis.cluster.nodes[1] = redis-cluster-02.weuatapp.net:6379
spring.redis.cluster.nodes[2] = redis-cluster-03.weuatapp.net:6379
spring.redis.cluster.nodes[3] = redis-cluster-04.weuatapp.net:6379
spring.redis.cluster.nodes[4] = redis-cluster-05.weuatapp.net:6379
spring.redis.cluster.nodes[5] = redis-cluster-06.weuatapp.net:6379

spring.redis.cluster.max-redirects = 5
spring.redis.timeout = 10000ms
spring.redis.lettuce.pool.max-active = 50
spring.redis.lettuce.pool.max-idle = 30
spring.redis.lettuce.pool.min-idle = 10

hystrix.threadpool.default.coreSize = 3
hystrix.threadpool.default.maximumSize = 6
hystrix.threadpool.default.maxQueueSize = 20
hystrix.threadpool.default.queueSizeRejectionThreshold = 20
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize = true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 3000
hystrix.command.default.circuitBreaker.errorThresholdPercentage = 50
hystrix.command.default.circuitBreaker.requestVolumeThreshold = 5
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds = 3000
feign.hystrix.enabled = true
feign.okhttp.enabled = true
ribbon.IsSecure = false
ribbon.ReadTimeout = 2000
ribbon.ConnectTimeout = 2000
ribbon.eager-load.enabled = true

# job
cpt.job.zookeeper = kafka01.weuatapp.net:12181,kafka02.weuatapp.net:12181,kafka03.weuatapp.net:12181

#kafka手动ack
spring.application.name = ${rootArtifactId}
spring.cloud.config.fail-fast = false
spring.cloud.config.discovery.enabled = false
server.port = 10002
server.tomcat.max-threads = 800
server.tomcat.min-spare-threads = 200
server.tomcat.accesslog.enabled = true
server.tomcat.accesslog.rotate = true
server.tomcat.accesslog.directory = ${logging.file.path}
#eureka
eureka.instance.prefer-ip-address = true
eureka.client.serviceUrl.defaultZone = http://eureka.weuatapp.net:8080/eureka/
#eureka.instance.instance-id = ${dockerip}:${server.port}
eureka.client.registry-fetch-interval-seconds = 10
# 续约更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds = 3
# 续约到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds = 0
# docker部署获取ip切换
eureka.instance.ip-address = ${dockerip}
eureka.instance.instance-id = ${dockerip}:10002
logging.level.com.cpt = INFO
logging.file.path = ~/logs/${rootArtifactId}


#xxl job
xxl.job.accessToken = 
xxl.job.admin.addresses = http://xxl-job.weuatapp.net:11000/xxl-job-admin/
xxl.job.executor.appname = cpt-settlement
xxl.job.executor.ip = 
xxl.job.executor.port = 9991
xxl.job.executor.logpath = /data/applogs/xxl-job/jobhandler
xxl.job.executor.logretentiondays = 30
order.bets.table.size = 8

settlement.order.size = 100

